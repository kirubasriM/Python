class NumArray(object):

    def __init__(self, nums):
        self.n = len(nums)
        self.nums = nums[:]
        self.bit = [0] * (self.n + 1)

        for i in range(self.n):
            self._updateBIT(i + 1, nums[i])

    def _updateBIT(self, index, delta):
        while index <= self.n:
            self.bit[index] += delta
            index += index & -index

    def update(self, index, val):
        delta = val - self.nums[index]
        self.nums[index] = val
        self._updateBIT(index + 1, delta)

    def _query(self, index):
        total = 0
        while index > 0:
            total += self.bit[index]
            index -= index & -index
        return total

    def sumRange(self, left, right):
        return self._query(right + 1) - self._query(left)
